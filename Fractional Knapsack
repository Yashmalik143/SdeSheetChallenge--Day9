#include <bits/stdc++.h>
bool comp(pair<int, int>a,pair<int, int>b)
{
    double r1=(double)a.second/(double)a.first;
    double r2=(double)b.second/(double)b.first;
    return r1>r2;
}
double maximumValue (vector<pair<int, int>>& items, int n, int w)
{
    // Write your code here.
    // ITEMS contains {weight, value} pairs.
    sort(items.begin(),items.end(),comp);
    int currweight=0;
    double ans=0.0;
    
    for(int i=0;i<n;i++)
    {
        if(currweight+items[i].first<=w)
        {
            currweight += items[i].first;
          
            ans += items[i].second;
            
        }
        else
        {
            int remaining = w-currweight;
            ans += ((double)items[i].second/(double)items[i].first)*(double)remaining;
           
            break;
        }
    } return ans;
    
}
